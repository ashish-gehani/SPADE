#sidebar Documentation

=_Filtering provenance_=

We provide a set of filters to manipulate provenance data before it is committed to storage. They are described below:

----

===Fusion===

The Fusion filter can be used to merge vertices from related provenance streams. The configuration for this filter is stored in `cfg/fusion.config` and has the following format:

{{{
-- BEGIN FILE --
<1st reporter>
<2nd reporter>
<1st reporter>.<annotation>=<2nd reporter>.<annotation>
...
-- END FILE --
}}}

To merge the two streams, the names of both reporters must be specified on the first two lines of the config file.

Next, rules can be specified on which to merge annotations. These rules are specified as `<1st reporter>.<annotation>=<2nd reporter>.<annotation>`.

The Fusion filter will check to see if the merge rules satisfy the incoming vertices. If vertices are found that match the criteria, they are fused into a single vertex.

----

===IORuns===

Since reads and writes in an OS are typically chunked, a single read event to extract data from a file can result in multiple read operations happening in the underlying OS. This can result in a high volume of provenance data, especially when reading/writing large files. The IORuns filter can be used to aggregate consecutive edges of the same I/O operation (i.e., either read or write) into a single edge.

----

===CycleAvoidance===

This filter tracks the ancestors of a file and creates a new version each time a new ancestor is encountered.

----

===GraphFinesse===

This filter tracks the entire lineage graph of a file and creates a new version if a new edge would have created a cycle.

----

===Adding/removing filters===

Internally, SPADE maintains a list of filters for processing data provenance before passing it to storage. The list structure allows users to transform data using multiple filters. To add a filter, you must specify the filter name and the index in the list where you wish to add the filter. For the first filter, the index will be 0. Example:

{{{
-> add filter IORuns 0
Adding filter IORuns... done
}}}

Another filter may then be added *before* the IORuns filter by specifying 0 as the index:

{{{
-> add filter CycleAvoidance 0
Adding filter CycleAvoidance... done
}}}

At this point, CycleAvoidance is located at index 0 and IORuns is located at index 1. Another filter can be added *after* CycleAvoidance and *before* IORuns by specifying 1 as the index:

{{{
-> add filter GraphFinesse 1
Adding filter GraphFinesse... done
}}}

Based on the list structure maintained by SPADE, data provenance will first be transformed by CycleAvoidance, then GraphFinesse, and finally by IORuns before being delivered to storage.

To remove a filter, simply specify the index:

{{{
-> remove filter 1
Removing filter GraphFinesse... done
}}}