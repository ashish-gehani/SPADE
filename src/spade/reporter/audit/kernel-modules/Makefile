# SPADE - Support for Provenance Auditing in Distributed Environments.
# Copyright (C) 2015 SRI International.

MAIN_MODULE_NAME=netio
CONTROLLER_MODULE_NAME=netio_controller

MODULES_SRC = src/spade/reporter/audit/kernel-modules
MODULES_BIN = lib/kernel-modules
FIND_CMD_SRC_FILES_FLAGS = ! -name 'README' ! -name 'Makefile' ! -name '$(MAIN_MODULE_NAME).c' ! -name '$(CONTROLLER_MODULE_NAME).c' ! -name 'args.h' ! -name 'build.h'

BUILD_VERSION_HEADER_PATH=$(PWD)/$(MODULES_SRC)/build.h

obj-m += $(MAIN_MODULE_NAME).o $(CONTROLLER_MODULE_NAME).o

ccflags-y := -DRETPOLINE

all:
# remove the existing built modules (if any)
	@rm -rf $(MODULES_BIN)
# make the bin directory for the module
	@mkdir -p $(MODULES_BIN)
# create hash of source files. Current source files: netio.c, netio_controller.c, args.h
	$(eval module_src_hash=$(shell cat $(PWD)/$(MODULES_SRC)/$(MAIN_MODULE_NAME).c $(PWD)/$(MODULES_SRC)/$(CONTROLLER_MODULE_NAME).c $(PWD)/$(MODULES_SRC)/args.h | sha256sum | cut -d ' ' -f 1))
# create build.h with hash
	$(shell echo "/* AUTOGENERATED. DON'T MODIFY BY HAND */" > $(BUILD_VERSION_HEADER_PATH))
	$(shell echo '#define BUILD_HASH "'$(module_src_hash)'"' >> $(BUILD_VERSION_HEADER_PATH))
	$(shell echo '#define MAIN_MODULE_NAME "'$(MAIN_MODULE_NAME)'"' >> $(BUILD_VERSION_HEADER_PATH))
	$(shell echo '#define CONTROLLER_MODULE_NAME "'$(CONTROLLER_MODULE_NAME)'"' >> $(BUILD_VERSION_HEADER_PATH))
# build the module
	make -C /lib/modules/$(shell uname -r)/build M=$(PWD)/$(MODULES_SRC) modules
# move are the files except the ones mentioned in FIND_CMD_SRC_FILES_FLAGS
	@find $(MODULES_SRC) -mindepth 1 -prune $(FIND_CMD_SRC_FILES_FLAGS) -exec mv -t $(MODULES_BIN) {} \;

clean:
# remove existing source files
	@find $(MODULES_SRC) -mindepth 1 -prune $(FIND_CMD_SRC_FILES_FLAGS) -exec rm -rf {} \;
# remove bin folder
	@rm -rf $(MODULES_BIN)
